{"version":3,"sources":["firebase.js","containers/Home.js","containers/TicTacToe.js","containers/Redirect.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","appId","firebase","length","refURL","Firebase","database","ref","useState","url","setURL","setURLList","useEffect","getURL","orderByChild","on","snap","data","forEach","item","push","count","val","key","reverse","className","onSubmit","event","preventDefault","window","location","href","onChange","e","target","value","placeholder","type","outline","theme","size","onClick","Math","random","toString","substring","child","set","newGame","then","localStorage","setItem","createGame","Square","props","Board","i","this","disabled","squares","renderSquare","React","Component","initialState","history","Array","fill","stepNumber","xIsNext","isX","showReset","Game","state","pathname","substr","getItem","setState","exists","console","log","slice","calculateWinner","concat","step","status","current","winner","noWin","showCode","map","move","desc","jumpTo","toDisable","host","handleClick","reset","lines","a","b","c","exist","setExist","once","App","Helmet","name","content","path","exact","component","Home","Redirect","Boolean","hostname","match","require","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.807fcfee.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nexport default !firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\n","import React, { useState, useEffect } from 'react'\nimport Firebase from '../firebase'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardTitle,\n    InputGroup,\n    CardSubtitle,\n    InputGroupAddon,\n    FormInput,\n} from 'shards-react'\nimport './style.css'\nimport dayjs from 'dayjs'\nimport md5 from 'md5';\nimport * as Icon from 'react-feather';\n\n\nconst urlRegEx = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/\n\nexport default () => {\n    const refURL = Firebase.database().ref('game')\n    const [url, setURL] = useState('')\n    const [urlList, setURLList] = useState([])\n    useEffect(() => { getURL() }, [])\n\n    const getURL = () => {\n        refURL\n            .orderByChild('timestamp')\n            .on('value', snap => {\n                var data = []\n                if (snap !== null) {\n                    snap.forEach(item => {\n                        data.push({\n                            count: item.val().count,\n                            key: item.key,\n                            url: item.val().url,\n                        })\n                    })\n                    setURLList(data.reverse())\n                }\n            })\n    }\n    const submitURL = event => {\n        event.preventDefault();\n        window.location.href = url\n    }\n\n    const onPushData = url => {\n        const key = md5(url + urlList.length).substring(0, 5)\n        urlRegEx.test(url) && refURL\n            .child(key)\n            .set({ count: 0, url, timestamp: dayjs().format() })\n        setURL('')\n    }\n\n    const removeURL = key => refURL.child(key).remove()\n\n    const createGame = () => {\n        const key = Math.random().toString(36).substring(2, 7)\n        refURL.child(key).set({ newGame: true }).then(() => window.location.href = key)\n        localStorage.setItem(key, true);\n\n    }\n\n    return (\n        <div>\n            <div className=\"title\">tic tac toe</div>\n            <div>\n                <form onSubmit={submitURL}>\n                    <InputGroup>\n                        <FormInput onChange={e => setURL(e.target.value)} value={url} placeholder=\"Enter invite code\" />\n                        <InputGroupAddon type=\"append\">\n                            <Button outline theme=\"secondary\">\n                                <Icon.ChevronRight size={20} />\n                            </Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n                </form>\n            </div>\n            <div className=\"button\">\n                <Button\n                    onClick={() => createGame()}\n                    size=\"bg\"\n                    theme=\"light\"\n                    outline\n                >Create New Game</Button>\n            </div>\n\n        </div>\n    )\n}\n\n\n\n\n","import React from 'react';\nimport './ticstyle.css'\nimport Firebase from '../firebase'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardTitle,\n    InputGroup,\n    CardSubtitle,\n    InputGroupAddon,\n    FormInput,\n} from 'shards-react'\nimport * as Icon from 'react-feather';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n        return (\n            <>\n                {\n                    this.props.disabled ?\n                        <Square\n                            value={this.props.squares[i]}\n                            onClick={() => this.props.onClick(i)}\n                        />\n                        :\n                        <Square\n                            value={this.props.squares[i]}\n                        />\n                }\n\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst initialState = {\n    history: [\n        {\n            squares: Array(9).fill('')\n        }\n    ],\n    stepNumber: 0,\n    xIsNext: true,\n    isX: false,\n    showReset: false,\n};\n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        }\n    }\n    componentDidMount() {\n        const key = window.location.pathname.substr(1)\n        if (localStorage.getItem(key)) {\n            this.setState({\n                isX: true\n            })\n        }\n        Firebase.database()\n            .ref('game')\n            .child(key)\n            .on('value', snap => {\n                if (snap.exists()) {\n                    if (snap.val().newGame) {\n                        console.log('new!')\n                    } else {\n                        this.setState({\n                            history: snap.val().history,\n                            stepNumber: snap.val().stepNumber,\n                            xIsNext: snap.val().xIsNext,\n                            showReset: snap.val().showReset\n                        })\n                    }\n                }\n            })\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares\n                }\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        }, () => {\n            console.log(this.state.history)\n            Firebase.database()\n                .ref('game')\n                .child(window.location.pathname.substr(1))\n                .set({\n                    history: this.state.history,\n                    stepNumber: this.state.stepNumber,\n                    xIsNext: this.state.xIsNext\n                })\n        });\n\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    reset() {\n        Firebase.database()\n            .ref('game')\n            .child(window.location.pathname.substr(1))\n            .set(initialState)\n    }\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n        const noWin = (history.length > 9)\n        const showCode = (history.length < 3)\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n        let showReset = false\n        let status;\n        let toDisable = this.state.isX === this.state.xIsNext\n\n        if (winner) {\n            status = \"Winner: \" + winner;\n            showReset = true\n        } else if (noWin) {\n            status = \"No Winners\";\n            showReset = true\n        } else {\n            if (toDisable) {\n                status = \"it's your turn!\"\n            } else {\n                status = \"waiting opponent... \"\n            }\n        }\n\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    {\n                        showCode &&\n                        <>\n                            <b>share URL</b>\n                            <p><a href={window.location.href}>{window.location.host}/{window.location.pathname.substr(1)}</a></p>\n                        </>\n                    }\n                    <Board\n                        squares={current.squares}\n                        onClick={i => this.handleClick(i)}\n                        disabled={toDisable}\n                    />\n                    <div className=\"info\">\n                        {\n                            this.state.isX ? <div>you're X</div> : <div>you're O</div>\n                        }\n\n                        <b>{status}</b>\n                    </div>\n\n                    {\n                        showReset &&\n                        <Button outline size=\"sm\" theme=\"danger\" onClick={() => this.reset()}><Icon.RotateCcw size={15} /></Button>\n\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n","import React, { useState, useEffect } from 'react'\nimport Firebase from '../firebase'\nimport TicTacToe from './TicTacToe'\nexport default () => {\n    const [isRedirecting, setRedirecting] = useState(true)\n    const [exist, setExist] = useState(0)\n    useEffect(() => {\n        getURL()\n    }, [])\n    const getURL = () => {\n        const key = window.location.pathname.substr(1)\n        console.log(key)\n        Firebase.database()\n            .ref('game')\n            .child(key)\n            .once('value')\n            .then(snap => {\n                if (snap.exists()) {\n                    setExist(2)\n                } else setExist(1)\n            })\n    }\n\n    return (\n        <div>\n            {exist === 0 &&\n                <div>\n                    <p>Loading Game..</p>\n                    <a href=\"/\">Go Back?</a>\n                </div>\n            }\n            {exist === 1 &&\n                <div>\n                    <p>URL not found</p>\n                    <a href=\"/\">Go Back?</a>\n                </div>\n            }\n\n            {exist === 2 && <TicTacToe />}\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './containers/Home'\nimport Redirect from './containers/Redirect'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport { Helmet } from 'react-helmet'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <title>tic tac toe</title>\n        <meta name=\"description\" content=\"This is a URL shortener website built with ReactJS & Firebase\" />\n      </Helmet>\n      <Router >\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:id\" exact component={Redirect} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}